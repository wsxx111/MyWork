<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FrameworkOfGoodMan.Tools</name>
    </assembly>
    <members>
        <member name="T:FrameworkOfGoodMan.Tools.Cache.HttpCache">
            <summary>
            对System.Web.HttpContext.Current.Cache的操作
            </summary>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Cache.ICache">
            <summary>
            缓存接口
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.ICache.Get(System.String)">
            <summary>
            获取值
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.ICache.Get``1(System.String)">
             <summary>
             获取值
             </summary>
             <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.ICache.Add(System.String,System.Object)">
            <summary>
            添加指定Key的对象
            </summary>
            <param name="key">键</param>
            <param name="obj">值</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.ICache.Add(System.String,System.Object,System.DateTime)">
            <summary>
            添加指定Key的对象
            </summary>
            <param name="key">键</param>
            <param name="obj">值</param>
            <param name="TimeOut">到期时间</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.ICache.Set(System.String,System.Object)">
            <summary>
            更新指定Key的对象
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.ICache.Set(System.String,System.Object,System.DateTime)">
            <summary>
            更新指定Key的对象
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="TimeOut">到期时间</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.ICache.Delete(System.String)">
            <summary>
            移除指定key的对象
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.HttpCache.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.HttpCache.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.HttpCache.Get``1(System.String)">
            <summary>
            获取缓存（泛型）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.HttpCache.Add(System.String,System.Object)">
            <summary>
            加入缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.HttpCache.Add(System.String,System.Object,System.DateTime)">
            <summary>
            加入缓存并设置时间
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.HttpCache.Set(System.String,System.Object,System.DateTime)">
            <summary>
            重新添加缓存（清除缓存）
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.HttpCache.Set(System.String,System.Object)">
            <summary>
            重新添加缓存（清除缓存）
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.HttpCache.Delete(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.Cache.HttpCache.Current">
            <summary>
            获取当前HttpCache唯一实例
            </summary>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Cache.MemCacheClient">
            <summary>
            Memcached操作
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.MemCacheClient.#ctor(System.String,System.String[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Memcached初期化
            </summary>
            <param name="pName">池名称</param>
            <param name="memServer">IP、端口号</param>
            <param name="InitConnections"></param>
            <param name="MinConnections"></param>
            <param name="MaxConnections"></param>
            <param name="SocketConnectTimeout"></param>
            <param name="SocketTimeout"></param>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.Cache.MemCacheClient.CacheClient">
            <summary>
            客户端缓存操作对象
            </summary>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Cache.SlMemCached">
            <summary>
            MemCache缓存策略
            </summary>
        </member>
        <member name="F:FrameworkOfGoodMan.Tools.Cache.SlMemCached.memcachedClient">
            <summary>
            缓存客户端对象
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.#ctor(FrameworkOfGoodMan.Tools.Cache.MemCacheClient)">
            <summary>
            构造方法
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.KeyExists(System.String)">
            <summary>
            判断主键是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.Get(System.String)">
            <summary>
            获取memcached缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.Get``1(System.String)">
            <summary>
            获取memcached缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.Add(System.String,System.Object)">
            <summary>
            添加memcached缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.Add(System.String,System.Object,System.DateTime)">
            <summary>
            添加memcached缓存并设置超时时间
            </summary>       
            <param name="key"></param>
            <param name="obj"></param>
            <param name="timeOut"></param>
            <returns></returns>
            
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.Set(System.String,System.Object)">
            <summary>
            添加memcached缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.Set(System.String,System.Object,System.DateTime)">
            <summary>
            添加memcached缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="validateTime"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.Set(System.String,System.Object,System.Int32)">
            <summary>
            添加memcached缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.GetMultiple(System.String[])">
            <summary>
            获取多个memcached缓存
            </summary>
            <param name="keys"></param>
            <returns>Hashtable</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.Delete(System.String)">
            <summary>
            删除memcached缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Cache.SlMemCached.GetStats">
            <summary>
            memcached状态查询
            </summary>
            <returns></returns>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.CommonHelper">
            <summary>
            普通帮助类
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.CommonHelper.GetEmailProvider(System.String)">
             <summary>
            获得邮箱提供者
             </summary>
             <param name="email">邮箱</param>
             <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.CommonHelper.ConvertIPToLong(System.String)">
            <summary>
            将ip地址转换成long类型
            </summary>
            <param name="ip">ip</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.CommonHelper.ToIP(System.Int64)">
            <summary>
            数字转换为IP
            </summary>
            <param name="ipValue">ipValue</param>
            <returns>结果</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.CommonHelper.HideEmail(System.String)">
            <summary>
            隐藏邮箱
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.CommonHelper.HideMobile(System.String)">
            <summary>
            隐藏手机
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ConfigHelper.Refresh">
            <summary>
            刷新配置
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ConfigHelper.GetValues``1(System.String,System.Char,System.Boolean)">
            <summary>
            获得值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">键</param>
            <param name="split">分割符</param>
            <param name="isDecode">是否解码</param>
            <returns>结果</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ConfigHelper.ParseArray``1(System.String,System.Char,System.Boolean)">
            <summary>
            解析为数组
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="value">值</param>
            <param name="split">分割符</param>
            <param name="isDecode">是否解码</param>
            <returns>结果</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ConfigHelper.GetValue``1(System.String,System.Boolean)">
            <summary>
            获得值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">键</param>
            <param name="isDecode">是否解码</param>
            <returns>结果</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ConfigHelper.ParseVariable(System.String)">
            <summary>
            解析变量
            </summary>
            <param name="value">参数</param>
            <returns>结果</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.DateHelper.GetDayOfWeek">
            <summary>
            获得当前星期(数字)
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.DateHelper.GetWeek">
            <summary>
            获得当前星期(汉字)
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.DateHelper.GetDateTimeMS">
            <summary>
            获得当前时间的""yyyy-MM-dd HH:mm:ss:fffffff""格式字符串
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.DateHelper.GetCommonDateTime">
            <summary>
            获得当前时间的""yyyy-MM-dd HH:mm:ss""格式字符串
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.DateHelper.GetChineseDateTime">
            <summary>
            获得中文当前日期yyyy年MM月dd日 HH时mm分ss秒
            </summary>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.DBHelper">
            <summary>
            访问数据库方法
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.Helper.DBHelper.Factory">
            <summary>
            关系数据库连接字符串
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.Helper.DBHelper.ConnectionString">
            <summary>
            关系数据库连接字符串
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.ExecuteCommand(System.String)">
            <summary>
            执行sql语句，返回受影响的行数
            </summary>
            <param name="safeSql">sql语句</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.ExecuteCommand(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行sql语句，同时传递参数，返回受影响的行数
            </summary>
            <param name="sql">sql语句</param>
            <param name="values">参数列表</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.ReturnStringScalar(System.String)">
            <summary>
            执行sql语句，不传递其他参数，返回第一行第一列的值
            </summary>
            <param name="safeSql">sql语句</param>
            <returns>string类型</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetScalarByString(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行sql语句，传递其他参数，返回第一行和第一列的值，string类型
            </summary>
            <param name="sql">sql语句</param>
            <param name="values">参数列表</param>
            <returns>返回第一行和第一列的值</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetScalar(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行sql语句，传递其他参数，返回第一行和第一列的值，int类型
            </summary>
            <param name="sql">sql语句</param>
            <param name="values">参数列表</param>
            <returns>返回第一行和第一列的值</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetScalar(System.String)">
            <summary>
            执行sql语句，不传递其他参数，返回第一行第一列的值，int类型
            </summary>
            <param name="safeSql">sql语句</param>
            <returns>返回第一行第一列的值</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.ExecuteCommandPro(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            调用存储过程，传递参数，返回受影响的行数
            </summary>
            <param name="StoredProcedure">存储过程名</param>
            <param name="values">参数列表</param>
            <returns>返回受影响的行数</returns>        
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetScalar_pro(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存储过程，传递参数，返回第一行第一列的值，int类型
            </summary>
            <param name="StoredProcedure">存储过程名</param>
            <param name="values">参数列表</param>
            <returns>返回第一行第一列的值</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetReader(System.String)">
            <summary>
            根据sql语句返回SqlDataReader对象
            </summary>
            <param name="safeSql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行sql语句，传递其他参数，返回SqlDataReader对象
            </summary>
            <param name="sql">sql语句</param>
            <param name="values">参数列表</param>
            <returns>SqlDataReader</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetReaderPro(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存储过程，传递参数，返回SqlDataReader对象
            </summary>
            <param name="Pro">存储过程名</param>
            <param name="values">参数</param>
            <returns>返回SqlDataReader对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetDataTable(System.String)">
            <summary>
            执行sql语句，不传递其他参数，返回DataTable对象
            </summary>
            <param name="safeSql">sql语句</param>
            <returns>返回DataTable对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetDataTable(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行sql语句，传递其他参数，返回DataTable对象
            </summary>
            <param name="sql">sql语句</param>
            <param name="values">参数列表</param>
            <returns>返回DataTable对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetDataTable_Pro(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行存储过程，传递参数，返回DataTable对象
            </summary>
            <param name="pro">存储过程名</param>
            <param name="values">参数</param>
            <returns>返回DataTable对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetDataTable_Pro(System.String)">
            <summary>
            执行存储过程，不传递参数，返回DataTable对象
            </summary>
            <param name="pro">存储过程名</param>
            <returns>返回DataTable对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetDataSet_Pro1(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行sql语句，传递3个参数，返回DataSet对象
            </summary>
            <param name="sql">sql语句</param>
            <param name="name">表名</param>
            <param name="values">参数</param>
            <returns>返回DataSet对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.GetDataSet_Pro2(System.String,System.String)">
            <summary>
            执行sql语句，传递2个参数，返回DataSet对象
            </summary>
            <param name="sql">sql语句</param>
            <param name="name">表名</param>       
            <returns>返回DataSet对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.MakeParam(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Object)">
            <summary>
            实例化一个用于调用存储过程的参数
            </summary>
            <param name="ParamName">参数名称</param>
            <param name="DbType">参数类型</param>
            <param name="Size">参数大小</param>
            <param name="Direction">传递方向</param>
            <param name="Value">值</param>
            <returns>新的 parameter 对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.HelpNewer.MakeInParam(System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            实例化一个用于调用存储过程的输入参数，返回SqlParameter
            </summary>
            <param name="ParamName">参数名称</param>
            <param name="DbType">参数类型</param>
            <param name="Size">参数大小</param>
            <param name="Value">值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.GetSafeData.ValidateDataRowStr(System.Data.DataRow,System.String)">
            <summary>
            值为字符串类型
            </summary>
            <param name="row">数据行对象</param>
            <param name="colname">列名</param>
            <returns>如果值存在，返回；否则，返回System.String.Empty</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.GetSafeData.ValidateDataRowInt(System.Data.DataRow,System.String)">
            <summary>
            值为整数类型
            </summary>
            <param name="row">数据行对象</param>
            <param name="colname">列名</param>
            <returns>如果值存在，返回；否则，返回System.Int32.MinValue</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.GetSafeData.ValidateDataRowBool(System.Data.DataRow,System.String)">
            <summary>
            值为布尔类型
            </summary>
            <param name="row">数据行对象</param>
            <param name="colname">列名</param>
            <returns>如果值存在，返回；否则，返回System.Int32.MinValue</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.GetSafeData.ValidateDataRowDouble(System.Data.DataRow,System.String)">
            <summary>
            值为浮点数类型
            </summary>
            <param name="row">数据行对象</param>
            <param name="colname">列名</param>
            <returns>如果值存在，返回；否则，返回System.Double.MinValue</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.HelpNewer.GetSafeData.ValidateDataRowDate(System.Data.DataRow,System.String)">
            <summary>
            值为时间类型
            </summary>
            <param name="row">数据行对象</param>
            <param name="colname">列名</param>
            <returns>如果值存在，返回；否则，返回System.DateTime.MinValue;</returns>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.EnumHelper">
            <summary>
            枚举帮助
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.EnumHelper.GetDescription(System.Enum)">
            <summary>
            从枚举中获取Description     
            </summary>
            <param name="enumName">需要获取枚举描述的枚举</param>
            <returns>描述内容</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.EnumHelper.GetDescriptAttr(System.Reflection.FieldInfo)">
            <summary>
            获取字段Description
            </summary>
            <param name="fieldInfo">FieldInfo</param>
            <returns>DescriptionAttribute[] </returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.EnumHelper.GetEnumName``1(System.String)">
            <summary>
            根据Description获取枚举          
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="description">枚举描述</param>
            <returns>枚举</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.EnumHelper.ToArrayList(System.Type)">
            <summary>
            将枚举转换为ArrayListKeyValuePair键值对（Enum和Description）
            说明：
            若不是枚举类型，则返回NULL        
            </summary>
            <param name="type">枚举类型</param>
            <returns>ArrayList</returns>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.FileType">
            <summary>
            文件类型（枚举）
            </summary>
        </member>
        <member name="F:FrameworkOfGoodMan.Tools.Helper.FileType.Txt">
            <summary>
            txt后缀
            </summary>
        </member>
        <member name="F:FrameworkOfGoodMan.Tools.Helper.FileType.Config">
            <summary>
            config后缀
            </summary>
        </member>
        <member name="F:FrameworkOfGoodMan.Tools.Helper.FileType.Xml">
            <summary>
            xml后缀
            </summary>
        </member>
        <member name="F:FrameworkOfGoodMan.Tools.Helper.FileType.Log">
            <summary>
            log后缀
            </summary>
        </member>
        <member name="F:FrameworkOfGoodMan.Tools.Helper.FileType.Bat">
            <summary>
            bat后缀
            </summary>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.IOHelper">
            <summary>
            输入输出
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.GetMapPath(System.String,System.Boolean)">
            <summary>
            获得文件物理路径
            </summary>
            <param name="pathName">要获取的路径</param>
            <param name="isWebRequest">是否是Web应用</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.WriteExceptionLog(System.Exception,FrameworkOfGoodMan.Tools.Helper.FileType,System.String,System.Boolean)">
            <summary>
            记录异常日志信息，需要在web.config里设置logPath
            </summary>
            <param name="ex">异常对象</param>     
            <param name="ftype">文件类型(枚举)</param>
            <param name="logPathName">记录路径</param>
            <param name="isWebRequest">是否是Web应用</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.WriteErrorLog(System.String,FrameworkOfGoodMan.Tools.Helper.FileType,System.String,System.Boolean)">
            <summary>
            写入错误日志文件,需要在web.config里设置logPath
            </summary>      
            <param name="input">写入的信息</param>
            <param name="ftype">文件类型(枚举)</param>
            <param name="logPathName">web.config下的logpathName节点或非web应用下的文件名</param>
            <param name="isWebRequest">是否是Web应用</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.WriteLog(System.String,FrameworkOfGoodMan.Tools.Helper.FileType,System.String,System.Boolean)">
            <summary>
            写日志。需要在web.config里设置logPath，设置日志目录
            </summary>
            <param name="message">写入的信息</param>
            <param name="ftype">文件类型(枚举)</param>        
            <param name="logPathName">web.config下的logpathName节点或非web应用下的文件名</param>
            <param name="isWebRequest">是否是Web应用</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.SerializeToXml(System.Object,FrameworkOfGoodMan.Tools.Helper.FileType,System.String,System.String,System.Boolean)">
            <summary>
            XML序列化
            </summary>
            <param name="obj">序列对象</param>      
            <param name="ftype">文件类型(枚举)</param>
            <param name="filePath">相对文件路径</param>
            <param name="fileName">文件名称</param>
            <param name="isWebRequest">是否是Web应用</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.DeserializeFromXML(System.Type,FrameworkOfGoodMan.Tools.Helper.FileType,System.String,System.String,System.Boolean)">
            <summary>
            XML反序列化
            </summary>
            <param name="type">目标类型(Type类型)</param>
            <param name="ftype">文件类型(枚举)</param>
            <param name="filePath">相对文件路径</param>
            <param name="fileName">文件名称</param>
            <param name="isWebRequest">是否是Web应用</param>
            <returns>序列对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.BinarySerialize``1(``0,FrameworkOfGoodMan.Tools.Helper.FileType,System.String,System.String,System.Boolean)">
            <summary>
            序列化 对象到字符串
            </summary>
            <param name="obj">泛型对象</param>
            <returns>序列化后的字符串</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.BinaryDesrialize``1(``0,FrameworkOfGoodMan.Tools.Helper.FileType,System.String,System.String,System.Boolean)">
            <summary>
            反序列化 字符串到对象
            </summary>
            <param name="obj">泛型对象</param>
            <param name="str">要转换为对象的字符串</param>
            <returns>反序列化出来的对象</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.SoapSerialize``1(``0,FrameworkOfGoodMan.Tools.Helper.FileType,System.String,System.String,System.Boolean)">
            <summary>
            SOAP序列化
            </summary>
            <param name="obj">序列对象</param>      
            <param name="ftype">文件类型(枚举)</param>
            <param name="filePath">相对文件路径</param>
            <param name="fileName">文件名称</param>
            <param name="isWebRequest">是否是Web应用</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.SoapDesrialize``1(``0,FrameworkOfGoodMan.Tools.Helper.FileType,System.String,System.String,System.Boolean)">
             <summary>
            SOAP反序列化
             </summary>
             <param name="obj">序列对象</param>      
             <param name="ftype">文件类型(枚举)</param>
             <param name="filePath">相对文件路径</param>
             <param name="fileName">文件名称</param>
             <param name="isWebRequest">是否是Web应用</param>
             <returns>是否成功</returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.ComPress(System.Byte[])">
            <summary>
            压缩方法
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.IOHelper.DecomPress(System.Byte[])">
            <summary>
            解压缩方法
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.SecureHelper">
            <summary>
            安全帮助类
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SecureHelper.AESEncrypt(System.String,System.String)">
            <summary>
            AES加密
            </summary>
            <param name="encryptStr">加密字符串</param>
            <param name="encryptKey">密钥</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SecureHelper.AESDecrypt(System.String,System.String)">
            <summary>
            AES解密
            </summary>
            <param name="decryptStr">解密字符串</param>
            <param name="decryptKey">密钥</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SecureHelper.MD5(System.String)">
            <summary>
            MD5散列
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SecureHelper.IsBase64String(System.String)">
            <summary>
            判断是否是Base64字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SecureHelper.IsSafeSqlString(System.String)">
            <summary>
            判断当前字符串是否存在SQL注入
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SortHelper.BuildMaxHeap(System.Int32[])">
            <summary>
             创建大顶推（根节点大于左右子节点）
            </summary>
            <param name="array">待排数组</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SortHelper.MaxHeapify(System.Int32[],System.Int32,System.Int32)">
            <summary>
             大顶推的调整过程
            </summary>
            <param name="array">待调整的数组</param>
            <param name="currentIndex">待调整元素在数组中的位置（即：根节点）</param>
            <param name="heapSize">堆中所有元素的个数</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SortHelper.Swap(System.Int32@,System.Int32@)">
            <summary>
             交换函数
            </summary>
            <param name="a">元素a</param>
            <param name="b">元素b</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SortHelper.CountingSort(System.Int32[],System.Int32)">
            <summary> 
            counting sort 
            </summary> 
            <param name="arrayA">input array</param> 
            <param name="arrange">the value arrange in input array</param> 
            <returns></returns> 
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SortHelper.HeapSort(System.Int32[])">
            <summary> 
            小根堆排序 
            </summary> 
            <param name="dblArray"></param> 
            <param name="StartIndex"></param> 
            <returns></returns> 
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SortHelper.NodeSort(System.Int32[]@,System.Int32)">
            <summary> 
            节点排序 
            </summary> 
            <param name="dblArray"></param> 
            <param name="StartIndex"></param> 
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.SortHelper.ExchageValue(System.Int32@,System.Int32@)">
            <summary> 
            交换值 
            </summary> 
            <param name="A"></param> 
            <param name="B"></param> 
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.StringHelper">
            <summary>
            String操作
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.StringHelper.GetCharInStrCount(System.String,System.Char,System.Boolean)">
            <summary>
            获得字符串中指定字符的个数
            </summary>
            <param name="s">字符串</param>
            <param name="c">字符</param>
            <param name="IgnoreCase">是否忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.StringHelper.GetSubstrInStrCount(System.String,System.String,System.Boolean)">
            <summary>  
            计算字符串中子串出现的次数  
            </summary>  
            <param name="str">字符串</param>  
            <param name="substring">子串</param>  
            <param name="IgnoreCase">是否忽略大小写</param>
            <returns>出现的次数</returns>  
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.StringHelper.SplitString(System.String,System.String,System.Boolean)">
            <summary>
            分割字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="splitStr">分隔字符串</param>
             <param name="IgnoreCase">是否忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.StringHelper.StrTrimStart(System.String,System.String,System.Boolean)">
            <summary>
            移除前导字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="trimStr">移除字符串</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.StringHelper.StrTrimEnd(System.String,System.String,System.Boolean)">
            <summary>
            移除后导字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="trimStr">移除字符串</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.StringHelper.StrTrim(System.String,System.String,System.Boolean)">
            <summary>
            移除前导和后导字符串
            </summary>
            <param name="sourceStr">源字符串</param>
            <param name="trimStr">移除字符串</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.StringHelper.ClearTBBR(System.String)">
            <summary>
            去除字符串中的空格、回车、换行符、制表符
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.StringHelper.TBBRTrim(System.String)">
            <summary>
            去除字符串首尾处的空格、回车、换行符、制表符
            </summary>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.TypeHelper">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.StringToInt(System.String,System.Int32)">
            <summary>
            将string类型转换成int类型
            </summary>
            <param name="s">目标字符串</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.StringToInt(System.String)">
            <summary>
            将string类型转换成int类型
            </summary>
            <param name="s">目标字符串</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ObjectToInt(System.Object,System.Int32)">
            <summary>
            将object类型转换成int类型
            </summary>
            <param name="o">目标对象</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ObjectToInt(System.Object)">
            <summary>
            将object类型转换成int类型
            </summary>
            <param name="o">目标对象</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.StringToBool(System.String,System.Boolean)">
            <summary>
            将string类型转换成bool类型
            </summary>
            <param name="s">目标字符串</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ToBool(System.String)">
            <summary>
            将string类型转换成bool类型
            </summary>
            <param name="s">目标字符串</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ObjectToBool(System.Object,System.Boolean)">
            <summary>
            将object类型转换成bool类型
            </summary>
            <param name="o">目标对象</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ObjectToBool(System.Object)">
            <summary>
            将object类型转换成bool类型
            </summary>
            <param name="o">目标对象</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.StringToDateTime(System.String,System.DateTime)">
            <summary>
            将string类型转换成datetime类型
            </summary>
            <param name="s">目标字符串</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.StringToDateTime(System.String)">
            <summary>
            将string类型转换成datetime类型
            </summary>
            <param name="s">目标字符串</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ObjectToDateTime(System.Object,System.DateTime)">
            <summary>
            将object类型转换成datetime类型
            </summary>
            <param name="o">目标对象</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ObjectToDateTime(System.Object)">
            <summary>
            将object类型转换成datetime类型
            </summary>
            <param name="o">目标对象</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.StringToDecimal(System.String,System.Decimal)">
            <summary>
            将string类型转换成decimal类型
            </summary>
            <param name="s">目标字符串</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.StringToDecimal(System.String)">
            <summary>
            将string类型转换成decimal类型
            </summary>
            <param name="s">目标字符串</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ObjectToDecimal(System.Object,System.Decimal)">
            <summary>
            将object类型转换成decimal类型
            </summary>
            <param name="o">目标对象</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ObjectToDecimal(System.Object)">
            <summary>
            将object类型转换成decimal类型
            </summary>
            <param name="o">目标对象</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.ArrayToList``1(``0[])">
            <summary>
            数据转换为列表
            </summary>
            <param name="array">数组</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.TypeHelper.DataTableToList(System.Data.DataTable)">
            <summary> 
            DataTable转化为List
            </summary> 
            <param name="dt">DataTable</param> 
            <returns></returns> 
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.ValidateHelper">
            <summary>
            验证帮助类
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.IsEmail(System.String)">
            <summary>
            是否为邮箱名
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.IsMobile(System.String)">
            <summary>
            是否为手机号
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.IsPhone(System.String)">
            <summary>
            是否为固话号
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.IsIP(System.String)">
            <summary>
            是否为IP
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.IsIdCard(System.String)">
            <summary>
            是否是身份证号
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.CheckIDCard18(System.String)">
            <summary>
            是否为18位身份证号
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.CheckIDCard15(System.String)">
            <summary>
            是否为15位身份证号
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.IsDate(System.String)">
            <summary>
            是否为日期
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.IsNumeric(System.String)">
            <summary>
            是否是数值(包括整数和小数)
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.IsZipCode(System.String)">
            <summary>
            是否为邮政编码
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ValidateHelper.IsImgFileName(System.String)">
            <summary>
            是否是图片文件名
            </summary>
            <returns> </returns>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.WebHelper">
            <summary>
            Web帮助
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.DeleteCookie(System.String)">
            <summary>
            删除指定名称的Cookie
            </summary>
            <param name="name">Cookie名称</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.GetCookie(System.String)">
            <summary>
            获得指定名称的Cookie值
            </summary>
            <param name="name">Cookie名称</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.GetCookie(System.String,System.String)">
            <summary>
            获得指定名称的Cookie中特定键的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.SetCookie(System.String,System.String)">
            <summary>
            设置指定名称的Cookie的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.SetCookie(System.String,System.String,System.Double)">
            <summary>
            设置指定名称的Cookie的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="value">值</param>
            <param name="expires">过期时间</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.SetCookie(System.String,System.String,System.String)">
            <summary>
            设置指定名称的Cookie特定键的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.SetCookie(System.String,System.String,System.String,System.Double)">
            <summary>
            设置指定名称的Cookie特定键的值
            </summary>
            <param name="name">Cookie名称</param>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expires">过期时间</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.IsGet">
            <summary>
            是否是get请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.IsPost">
            <summary>
            是否是post请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.IsAjax">
            <summary>
            是否是Ajax请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.GetQueryString(System.String,System.String)">
            <summary>
            获得查询字符串中的值
            </summary>
            <param name="key">键</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.GetFormString(System.String,System.String)">
            <summary>
            获得表单中的值
            </summary>
            <param name="key">键</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.GetRequestString(System.String,System.String)">
            <summary>
            获得请求中的值
            </summary>
            <param name="key">键</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.GetIP">
            <summary>
            获得请求的ip
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.GetBrowserName">
            <summary>
            获得请求的浏览器名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.IsBrowser">
            <summary>
            判断是否是浏览器请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.IsMobile">
            <summary>
            是否是移动设备请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.GetRequestData(System.String,System.String,System.Text.Encoding,System.String,System.Int32)">
            <summary>
            获得http请求数据
            </summary>
            <param name="url">请求地址</param>
            <param name="postData">发送数据</param>
            <param name="encoding">编码</param>
            <param name="method">请求方式</param>       
            <param name="timeout">超时值</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:FrameworkOfGoodMan.Tools.Helper.WebHelper.PostData(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.HtmlDecode(System.String)">
            <summary>
            HTML解码
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.HtmlEncode(System.String)">
            <summary>
            HTML编码
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.UrlDecode(System.String)">
            <summary>
            URL解码
            </summary>
            <returns></returns>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.WebHelper.UrlEncode(System.String)">
            <summary>
            URL编码
            </summary>
            <returns></returns>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Helper.ZipHelper">
            <summary>
            压缩文件
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ZipHelper.ZipFile(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            压缩单个文件
            </summary>
            <param name="fileToZip">要压缩的文件</param>
            <param name="zipedFile">压缩后的文件</param>
            <param name="compressionLevel">压缩等级</param>
            <param name="blockSize">每次写入大小</param>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Helper.ZipHelper.UnZip(System.String,System.String,System.String,System.Boolean)">
            <summary>
            解压缩一个 zip 文件。
            </summary>
            <param name="zipedFile">The ziped file.</param>
            <param name="strDirectory">The STR directory.</param>
            <param name="password">zip 文件的密码。</param>
            <param name="overWrite">是否覆盖已存在的文件。</param>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.Mail.Mail">
            <summary>
            邮件发送
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.Mail.Mail.Send(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.String[],System.String[])">
            <summary>
            发送邮件
            </summary>
            <param name="isBodyHtml">正文是否是HTML格式</param>
            <param name="subject">主题</param>
            <param name="body">内容</param>
            <param name="account">账号名</param>
            <param name="password">密码</param>
            <param name="mailServer">服务器</param>
            <param name="to">接收者</param>
            <param name="cc">抄送者</param>
            <param name="bcc">秘送者</param>
            <param name="attachFile">附件</param>
        </member>
        <member name="T:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion">
            <summary>
            通过手机号取归属地信息
            </summary>
        </member>
        <member name="F:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.All">
            <summary>
            所有
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.Find(System.String)">
            <summary>
            通过手机号取归属地信息
            </summary>
            <param name="mobilePhone">手机号</param>
            <returns>结果</returns>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.ID">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.MobileNumber">
            <summary>
            手机号前缀
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.Province">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.MobileType">
            <summary>
            运营商
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.AreaCode">
            <summary>
            区号
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.MobilePhone.MobilePhoneRegion.PostCode">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.ResourceRead.Resource.MobilePhone">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.ResourceRead.SlResource.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>     
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.ResourceRead.SlResource.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>         
        </member>
        <member name="P:FrameworkOfGoodMan.Tools.ResourceRead.SlResource.MobilePhone">
            <summary>
              查找 System.Byte[] 类型的本地化资源。
            </summary>
        </member>
    </members>
</doc>
